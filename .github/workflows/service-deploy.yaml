name: Polybot Service Deployment

on:
  push:
    branches:
      - main

env:
  EC2_PUBLIC_IP: 13.38.131.242

jobs:
  PolybotBuild:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v2

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and push Polybot image
        run: |
          cd polybot
          IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/polybot:${{ github.run_number }}
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

  Yolo5Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v2

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and push Yolo5 image
        run: |
          cd yolo5
          IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/yolo5:${{ github.run_number }}
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

  Deploy:
    name: Deploy Docker compose project
    runs-on: ubuntu-latest
    needs:
      - PolybotBuild
      - Yolo5Build

    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v2

      - name: Copy Docker Compose file to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          source: docker-compose.yaml
          target: /home/ubuntu/projects/DockerProject-bennyi/
          debug: true

      - name: Copy MongoDB init script to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          source: init-mongo.sh
          target: /home/ubuntu/projects/DockerProject-bennyi/
          debug: true

      - name: Update Docker Compose project on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            sudo apt update
            sudo apt install -y docker-compose jq
            cd /home/ubuntu/projects/DockerProject-bennyi/
            echo "TELEGRAM_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" > .env
            echo "S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}" >> .env
            echo "YOLO5_URL=${{ secrets.YOLO5_URL }}" >> .env
            NGROK_DOMAIN=$(curl -s localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
            echo "TELEGRAM_APP_URL=$NGROK_DOMAIN" >> .env
            echo """
            POLYBOT_IMG_NAME=${{ secrets.DOCKERHUB_USERNAME }}/polybot:${{ github.run_number }}
            YOLO5_IMG_NAME=${{ secrets.DOCKERHUB_USERNAME }}/yolo5:${{ github.run_number }}
            """ >> .env
            docker-compose down
            docker-compose up -d
            sleep 10
            chmod +x ./init-mongo.sh
            ./init-mongo.sh

