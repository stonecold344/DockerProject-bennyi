name: Polybot Service Deployment

on:
  push:
    branches:
      - main

env:
  EC2_PUBLIC_IP: 35.180.191.125

jobs:
  PolybotBuild:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v2

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and push Polybot image
        run: |
          cd polybot
          IMAGE_NAME=dockerhub_username/polybot:${{ github.run_number }}
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

  Yolo5Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v2

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and push Yolo5 image
        run: |
          cd yolo5
          IMAGE_NAME=dockerhub_username/yolo5:${{ github.run_number }}
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

  Deploy:
    name: Deploy Docker compose project
    runs-on: ubuntu-latest
    needs:
      - PolybotBuild
      - Yolo5Build

    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v2

      - name: Copy Compose files to the EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          source: docker-compose.yml
          target: polybot/

      - name: Copy MongoDB init script to the EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          source: init-mongo.sh
          target: polybot/

      - name: Update the Docker Compose project in the EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            sudo apt update && sudo apt install -y jq docker-compose-plugin
            cd polybot/
            echo "${{ secrets.TELEGRAM_BOT_TOKEN }}" > telegram_bot_token.secret
            NGROK_DOMAIN=$(curl -s localhost:8443/api/tunnels | jq -r '.tunnels[0].public_url')
            echo """
            POLYBOT_IMG_NAME=dockerhub_username/polybot:${{ github.run_number }}
            YOLO5_IMG_NAME=dockerhub_username/yolo5:${{ github.run_number }}
            TELEGRAM_APP_URL=$NGROK_DOMAIN
            """ > .env
            docker-compose down
            docker-compose up -d
            sleep 10 # Wait for MongoDB containers to be ready
            ./init-mongo.sh
