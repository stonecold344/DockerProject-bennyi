version: '3.8'

services:
  mongo1:
    image: mongo:7.0.14
    container_name: mongo1
    labels:
      - "type=mongo"
      - "com.docker.compose.service=mongo1"
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo1-data:/data/db
    command: ["mongod", "--replSet", "rs0"]
    networks:
      - mongo-cluster
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 30s

  mongo2:
    image: mongo:7.0.14
    container_name: mongo2
    labels:
      - "type=mongo"
      - "com.docker.compose.service=mongo2"
    restart: always
    ports:
      - "27018:27017"
    volumes:
      - mongo2-data:/data/db
    command: ["mongod", "--replSet", "rs0"]
    networks:
      - mongo-cluster
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 30s

  mongo3:
    image: mongo:7.0.14
    container_name: mongo3
    labels:
      - "type=mongo"
      - "com.docker.compose.service=mongo3"
    restart: always
    ports:
      - "27019:27017"
    volumes:
      - mongo3-data:/data/db
    command: ["mongod", "--replSet", "rs0"]
    networks:
      - mongo-cluster
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 30s

  mongo-init-replica:
    image: mongo:7.0.14
    container_name: mongo-init-replica
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    entrypoint: ["sh", "-c", "mongosh --host mongo1:27017 --eval 'rs.initiate({_id:\"rs0\", members:[{_id:0, host:\"mongo1:27017\"}, {_id:1, host:\"mongo2:27018\"}, {_id:2, host:\"mongo3:27019\"}]});'"]
    networks:
      - mongo-cluster
    restart: always

  yolo5:
    build: ./yolo5
    image: ${YOLO5_IMG_NAME}
    ports:
      - "8081:8081"
    volumes:
      - ~/.aws:/root/.aws
      - ~/projects/DockerProject-bennyi/static/data:/usr/src/app/static/data
    environment:
      - MONGO_URI=mongodb://mongo1:27017,mongo2:27018,mongo3:27019/?replicaSet=rs0
    depends_on:
      - mongo-init-replica
    networks:
      - mongo-cluster
    restart: always

  polybot:
    build: ./polybot
    image: ${POLYBOT_IMG_NAME}
    environment:
      TELEGRAM_TOKEN: ${TELEGRAM_TOKEN}
      TELEGRAM_APP_URL: ${TELEGRAM_APP_URL}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      YOLO5_URL: ${YOLO5_URL}
    ports:
      - "8443:8443"
    depends_on:
      - yolo5
    networks:
      - mongo-cluster
    restart: always

volumes:
  mongo1-data:
  mongo2-data:
  mongo3-data:

networks:
  mongo-cluster:
    driver: bridge
